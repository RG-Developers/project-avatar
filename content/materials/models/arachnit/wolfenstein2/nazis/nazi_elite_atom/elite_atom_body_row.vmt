//Arachnit's super duper cool MLG vmt config, donut steal plz. :(

"VertexLitGeneric"
{
//Basic
	"$BaseTexture" 			    "models/arachnit/wolfenstein2/nazis/nazi_elite_atom/elite_atom_body_row_c"
	"$BumpMap" 				    "models/arachnit/wolfenstein2/nazis/nazi_elite_atom/elite_atom_body_row_n"
	"$PhongExponentTexture"     "models/arachnit/wolfenstein2/nazis/nazi_elite_atom/elite_atom_body_row_s"
//Warp
	"$LightWarpTexture"         "models/arachnit/shared/clothes_wrp2"		//< Change as needed
//	"$PhongWarpTexture"         "models/arachnit/shared/ctm_specwarp" 		//< Change as needed

//Phong
	"$Phong"				    "1"
	"$PhongBoost"               "1" 	//< Change as needed
	"$PhongExponent"            "10" 	//< $PhongExponent overrides $PhongExponentTexture !!!
	"$PhongFresnelRanges"	    "[0.3 0.6 1]"
//	"$PhongTint" 			    "[.85 .85 1]"
	"$PhongDisableHalfLambert"  "0"
	"$PhongAlbedoTint"          "1"
	"$PhongAlbedoBoost"         "3"
	"$NormalmapAlphaPhongMask"  "1"
	"$ForcePhong"				"1"

//Rimlight
	"$Rimlight" 			    "1"
	"$RimMask" 				    "1"
	"$RimlightExponent"         "6"
	"$RimlightBoost"            "0.3"
	"$RimlightAlbedo"           "0.6"
	"$RimlightTint"             "[0.8 1.0 1.2]"

//Environment map / Reflection
//	"$Envmap"                   "env_cubemap"
	"$EnvmapTint" 			    "[ 0.05 0.05 0.05 ]"
	"$EnvmapSaturation"         "-0.6"
	"$EnvmapContrast" 		    "1"
	"$EnvmapLightScale"         "0.18"
	"$NormalmapAlphaEnvmapMask" "1"

//Other
	"$Model"                    "1"
	"$HalfLambert" 			    "1"
	"$NoDecal" 				    "0"
	"$NoLod" 				    "0"
	"$AmbientOcclusion" 	    "1"
	"$NoCull" 				    "0"
	"$SurfaceProp" 			    "flesh"
//	"$Color2"					"{ 185 185 185 }"	//< RGB colors
	"$CloakPassEnabled" 		"1" 	//< For SFM and TF2
//	"$CloakColorTint" 			"[0.4 0.5 1]" // BLU
//	"$CloakColorTint" 			"[1 0.5 0.4]" // RED

//Detail
	"$Detail" 				  	  "models/arachnit/shared/leatherdetail" 	//< Change as needed
	"$DetailScale" 			  	  "16"
	"$DetailBlendFactor" 	  	  "1.7"
	"$DetailBlendMode" 		   	  "0"

	
	"$phong" "1"
	// "$phongexponent" "4"
	"$phongboost" "0.3"
	"$phongfresnelranges" "[0.1 0.2 0.5]"
	
	"$phongexponenttexture" "models/arachnit/wolfenstein2/nazis/nazi_elite_atom/elite_atom_body_row_s"
	
	"$rimlight" "1"
	"$rimlightexponent" "8"
	"$rimlightboost" "2"
	"$rimmask" "1"
	
	// ------------------------------------------------------------------------
	// PLAYER COLOR CUSTOMIZATION
	// ------------------------------------------------------------------------
	
	// The following chain of proxies is to modulate phong tint (and rimlight,
	// by extension) according to your chosen player color, but only within a
	// certain saturation range: 50%. This might be confusing, I tried my best
	// to comment it, e-mail maxofs2d@facepunchstudios.com if you have any
	// questions regarding how player colourability is set up in VMTs. GLHF.
	
	"$blendtintbybasealpha" "1" // alpha channel of $basetexture: color mask.
 	"$blendtintcoloroverbase" "0" // blend mode. anything =/= 0 is ugly!
	
	// --- Test values. Comment the PlayerColor proxy to use one of these.
	// "$color2" "{0 0 0}" // Black
	// "$color2" "{255 0 0}" // Blue (default)
	// "$color2" "{59 121 160}" // Blue (TF2)
	// "$color2" "{180 52 41}" // Red (TF2)
	// "$color2" "{100 72 58}" // Brown
	// "$color2" "{140 208 112}" // Green
	// "$color2" "{248 166 202}" // Pink
	// "$color2" "{160 100 140}" // Purple
	// "$color2" "{242 168 96}" // Yellow (gold-ish)
	
	"$PhongBrightnessScalar" "0.5" // see below. "0.5" will get overwritten.
	
	Proxies
	{
		PlayerColor
		{
			resultVar	$color2 // pass the player color value to Gmod
			default		0.23 0.35 0.41 // unused for now.
		}
		Clamp // clamp the chosen color between 1% and 125% (usually)
		{
			min 0.01
			max 1.25
			srcVar1 "$color2"
			resultVar "$color2"
		}
		Clamp // copy this value to phong tint, clamp it to 50% min.
		{
			min 0.5
			max 1.0
			srcVar1 "$color2"
			resultVar "$phongtint"
		}
		Equals // copy $color2 value to exterior variable. this makes it
		{      // no longer a RGB array but a single float instead (!??)
			srcVar1 "$color2"
			resultVar "$PhongBrightnessScalar"
		}
		Multiply // multiply $phongtint by this new float value.
		{
			srcVar1 "$phongtint"
			srcVar2 "$phongBrightnessScalar"
			resultVar "$phongtint"
		}
		Clamp // the result of this multiply doesn't go any lower than 20%
		{
			min 0.25
			max 1.00
			srcVar1 "$phongtint"
			resultVar "$phongtint"
		}
	}
}